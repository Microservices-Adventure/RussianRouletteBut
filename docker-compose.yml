services:
  client:
    container_name: frontend
    build:
      context: .
      dockerfile: ./Frontend/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:8081;http://+:8080
      - ASPNETCORE_Kestrel__Certificates__Default__Password=my_password_is_very_puriramchick
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/certificates/aspnetapp.pfx
      - ASPNETCORE_AuthorizationService=authorization
      - ASPNETCORE_Kafka_Bootstrap_Servers=kafka:9092
      - REVOLVER_HOST=revolver
  
  auth-service:
    container_name: authorization
    restart: always
    depends_on:
      - kafka
      - authorization-db
    build:
      context: .
      dockerfile: ./Backend/Authorization/Authorization.Api/Dockerfile
    ports:
      - "8082:8082"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8082
      - ASPNETCORE_Kafka_Bootstrap_Servers=kafka:9092
      - ASPNETCORE_Postgres_Connection=User ID=postgres;Host=authorization-db;Port=5432;Database=auth-users-db;Pooling=true;
      - HealthSettings_CrashTime=15
      - HealthSettings_CooldownTime=15
  
  revolver-service:
    container_name: revolver
    restart: always
    build:
      context: .
      dockerfile: ./Backend/Revolver/Revolver.Api/Dockerfile
    ports:
      - "8084:8084"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8084
      - HealthSettings_CrashTime=15
      - HealthSettings_CooldownTime=15

  authorization-db:
    container_name: authorization-db
    image: postgres:latest
    restart: always
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_DB=auth-users-db"
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    ports:
      - "15432:5432"
    volumes:
      - auth-users-dbdata:/var/lib/postgresql/auth-users/data

  actionlog-db:
    image: postgres:latest
    restart: always
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_DB=action-log-db"
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    ports:
      - 15433:5432
    volumes:
      - action-log-dbdata:/var/lib/postgresql/action-log/data
    
  kafka:
    image: wurstmeister/kafka:latest
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: >-
        auth_register_events:1:1
    ports:
      - 9092:9092
    expose:
      - 9093
      - 9092
    volumes:
      - kafkadata:/kafka
  
  zookeeper:
    image: zookeeper:latest
    ports:
      - 2181:2181
    volumes:
      - zkdata:/data
      - zkdatalog:/datalog
      - zklogs:/logs
  
volumes:
    auth-users-dbdata:
    action-log-dbdata:
    kafkadata:
    zkdata:
    zkdatalog:
    zklogs: