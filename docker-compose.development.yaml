services:  
  authorization-db:
   container_name: authorization-db
   image: postgres:latest
   restart: always
   environment:
     - "POSTGRES_USER=postgres"
     - "POSTGRES_DB=auth-users-db"
     - "POSTGRES_HOST_AUTH_METHOD=trust"
   ports:
     - "15432:5432"
   volumes:
     - auth-users-dbdata:/var/lib/postgresql/auth-users/data
             
  actionlog-db:
   container_name: actionlog-db
   image: postgres:latest
   restart: always
   environment:
     - "POSTGRES_USER=postgres"
     - "POSTGRES_DB=action-log-db"
     - "POSTGRES_HOST_AUTH_METHOD=trust"
   ports:
     - "15433:5432"
   volumes:
     - action-log-dbdata:/var/lib/postgresql/action-log/data
      
  kafka:
    image: wurstmeister/kafka:latest
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: >-
        auth_register_events:1:1
        add_log_events:1:1
    ports:
      - 9092:9092
    expose:
      - 9093
      - 9092
    volumes:
      - kafkadata:/kafka

  zookeeper:
    image: zookeeper:latest
    ports:
      - 2181:2181
    volumes:
      - zkdata:/data
      - zkdatalog:/datalog
      - zklogs:/logs

volumes:
    auth-users-dbdata:
    action-log-dbdata:
    kafkadata:
    zkdata:
    zkdatalog:
    zklogs:
